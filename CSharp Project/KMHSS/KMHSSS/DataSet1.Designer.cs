//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace KMHSSS
{


    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet
    {

        private Daily_Net_Bill_TableDataTable tableDaily_Net_Bill_Table;

        private Van_Net_Bill_TableDataTable tableVan_Net_Bill_Table;

        private School_Net_Bill_TableDataTable tableSchool_Net_Bill_Table;

        private Hostel_Net_Bill_TableDataTable tableHostel_Net_Bill_Table;

        private Stationary_Net_Bill_TableDataTable tableStationary_Net_Bill_Table;

        private Other_School_Net_Bill_TableDataTable tableOther_School_Net_Bill_Table;

        private Other_Hostel_Net_Bill_TableDataTable tableOther_Hostel_Net_Bill_Table;

        private School_Fees_Not_Paid_TableDataTable tableSchool_Fees_Not_Paid_Table;

        private Van_Fees_Not_Paid_TableDataTable tableVan_Fees_Not_Paid_Table;

        private Hostel_Fees_Not_Paid_TableDataTable tableHostel_Fees_Not_Paid_Table;

        private Daily_Net_Bill_Amunt_TableDataTable tableDaily_Net_Bill_Amunt_Table;

        private Stationary_Paid_Net_Bill_TableDataTable tableStationary_Paid_Net_Bill_Table;

        private Stationary_Fees_Not_Paid_TableDataTable tableStationary_Fees_Not_Paid_Table;

        private Arrear_Student_TableDataTable tableArrear_Student_Table;

        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1()
        {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
            base(info, context, false)
        {
            if ((this.IsBinarySerialized(info, context) == true))
            {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Daily_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Daily_Net_Bill_TableDataTable(ds.Tables["Daily_Net_Bill_Table"]));
                }
                if ((ds.Tables["Van_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Van_Net_Bill_TableDataTable(ds.Tables["Van_Net_Bill_Table"]));
                }
                if ((ds.Tables["School_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new School_Net_Bill_TableDataTable(ds.Tables["School_Net_Bill_Table"]));
                }
                if ((ds.Tables["Hostel_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Hostel_Net_Bill_TableDataTable(ds.Tables["Hostel_Net_Bill_Table"]));
                }
                if ((ds.Tables["Stationary_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Stationary_Net_Bill_TableDataTable(ds.Tables["Stationary_Net_Bill_Table"]));
                }
                if ((ds.Tables["Other_School_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Other_School_Net_Bill_TableDataTable(ds.Tables["Other_School_Net_Bill_Table"]));
                }
                if ((ds.Tables["Other_Hostel_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Other_Hostel_Net_Bill_TableDataTable(ds.Tables["Other_Hostel_Net_Bill_Table"]));
                }
                if ((ds.Tables["School_Fees_Not_Paid_Table"] != null))
                {
                    base.Tables.Add(new School_Fees_Not_Paid_TableDataTable(ds.Tables["School_Fees_Not_Paid_Table"]));
                }
                if ((ds.Tables["Van_Fees_Not_Paid_Table"] != null))
                {
                    base.Tables.Add(new Van_Fees_Not_Paid_TableDataTable(ds.Tables["Van_Fees_Not_Paid_Table"]));
                }
                if ((ds.Tables["Hostel_Fees_Not_Paid_Table"] != null))
                {
                    base.Tables.Add(new Hostel_Fees_Not_Paid_TableDataTable(ds.Tables["Hostel_Fees_Not_Paid_Table"]));
                }
                if ((ds.Tables["Daily_Net_Bill_Amunt_Table"] != null))
                {
                    base.Tables.Add(new Daily_Net_Bill_Amunt_TableDataTable(ds.Tables["Daily_Net_Bill_Amunt_Table"]));
                }
                if ((ds.Tables["Stationary_Paid_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Stationary_Paid_Net_Bill_TableDataTable(ds.Tables["Stationary_Paid_Net_Bill_Table"]));
                }
                if ((ds.Tables["Stationary_Fees_Not_Paid_Table"] != null))
                {
                    base.Tables.Add(new Stationary_Fees_Not_Paid_TableDataTable(ds.Tables["Stationary_Fees_Not_Paid_Table"]));
                }
                if ((ds.Tables["Arrear_Student_Table"] != null))
                {
                    base.Tables.Add(new Arrear_Student_TableDataTable(ds.Tables["Arrear_Student_Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Daily_Net_Bill_TableDataTable Daily_Net_Bill_Table
        {
            get
            {
                return this.tableDaily_Net_Bill_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Van_Net_Bill_TableDataTable Van_Net_Bill_Table
        {
            get
            {
                return this.tableVan_Net_Bill_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public School_Net_Bill_TableDataTable School_Net_Bill_Table
        {
            get
            {
                return this.tableSchool_Net_Bill_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Hostel_Net_Bill_TableDataTable Hostel_Net_Bill_Table
        {
            get
            {
                return this.tableHostel_Net_Bill_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Stationary_Net_Bill_TableDataTable Stationary_Net_Bill_Table
        {
            get
            {
                return this.tableStationary_Net_Bill_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Other_School_Net_Bill_TableDataTable Other_School_Net_Bill_Table
        {
            get
            {
                return this.tableOther_School_Net_Bill_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Other_Hostel_Net_Bill_TableDataTable Other_Hostel_Net_Bill_Table
        {
            get
            {
                return this.tableOther_Hostel_Net_Bill_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public School_Fees_Not_Paid_TableDataTable School_Fees_Not_Paid_Table
        {
            get
            {
                return this.tableSchool_Fees_Not_Paid_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Van_Fees_Not_Paid_TableDataTable Van_Fees_Not_Paid_Table
        {
            get
            {
                return this.tableVan_Fees_Not_Paid_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Hostel_Fees_Not_Paid_TableDataTable Hostel_Fees_Not_Paid_Table
        {
            get
            {
                return this.tableHostel_Fees_Not_Paid_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Daily_Net_Bill_Amunt_TableDataTable Daily_Net_Bill_Amunt_Table
        {
            get
            {
                return this.tableDaily_Net_Bill_Amunt_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Stationary_Paid_Net_Bill_TableDataTable Stationary_Paid_Net_Bill_Table
        {
            get
            {
                return this.tableStationary_Paid_Net_Bill_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Stationary_Fees_Not_Paid_TableDataTable Stationary_Fees_Not_Paid_Table
        {
            get
            {
                return this.tableStationary_Fees_Not_Paid_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Arrear_Student_TableDataTable Arrear_Student_Table
        {
            get
            {
                return this.tableArrear_Student_Table;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
        {
            get
            {
                return this._schemaSerializationMode;
            }
            set
            {
                this._schemaSerializationMode = value;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables
        {
            get
            {
                return base.Tables;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations
        {
            get
            {
                return base.Relations;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet()
        {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone()
        {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
        {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
            {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Daily_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Daily_Net_Bill_TableDataTable(ds.Tables["Daily_Net_Bill_Table"]));
                }
                if ((ds.Tables["Van_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Van_Net_Bill_TableDataTable(ds.Tables["Van_Net_Bill_Table"]));
                }
                if ((ds.Tables["School_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new School_Net_Bill_TableDataTable(ds.Tables["School_Net_Bill_Table"]));
                }
                if ((ds.Tables["Hostel_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Hostel_Net_Bill_TableDataTable(ds.Tables["Hostel_Net_Bill_Table"]));
                }
                if ((ds.Tables["Stationary_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Stationary_Net_Bill_TableDataTable(ds.Tables["Stationary_Net_Bill_Table"]));
                }
                if ((ds.Tables["Other_School_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Other_School_Net_Bill_TableDataTable(ds.Tables["Other_School_Net_Bill_Table"]));
                }
                if ((ds.Tables["Other_Hostel_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Other_Hostel_Net_Bill_TableDataTable(ds.Tables["Other_Hostel_Net_Bill_Table"]));
                }
                if ((ds.Tables["School_Fees_Not_Paid_Table"] != null))
                {
                    base.Tables.Add(new School_Fees_Not_Paid_TableDataTable(ds.Tables["School_Fees_Not_Paid_Table"]));
                }
                if ((ds.Tables["Van_Fees_Not_Paid_Table"] != null))
                {
                    base.Tables.Add(new Van_Fees_Not_Paid_TableDataTable(ds.Tables["Van_Fees_Not_Paid_Table"]));
                }
                if ((ds.Tables["Hostel_Fees_Not_Paid_Table"] != null))
                {
                    base.Tables.Add(new Hostel_Fees_Not_Paid_TableDataTable(ds.Tables["Hostel_Fees_Not_Paid_Table"]));
                }
                if ((ds.Tables["Daily_Net_Bill_Amunt_Table"] != null))
                {
                    base.Tables.Add(new Daily_Net_Bill_Amunt_TableDataTable(ds.Tables["Daily_Net_Bill_Amunt_Table"]));
                }
                if ((ds.Tables["Stationary_Paid_Net_Bill_Table"] != null))
                {
                    base.Tables.Add(new Stationary_Paid_Net_Bill_TableDataTable(ds.Tables["Stationary_Paid_Net_Bill_Table"]));
                }
                if ((ds.Tables["Stationary_Fees_Not_Paid_Table"] != null))
                {
                    base.Tables.Add(new Stationary_Fees_Not_Paid_TableDataTable(ds.Tables["Stationary_Fees_Not_Paid_Table"]));
                }
                if ((ds.Tables["Arrear_Student_Table"] != null))
                {
                    base.Tables.Add(new Arrear_Student_TableDataTable(ds.Tables["Arrear_Student_Table"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else
            {
                this.ReadXml(reader);
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
        {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars()
        {
            this.InitVars(true);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable)
        {
            this.tableDaily_Net_Bill_Table = ((Daily_Net_Bill_TableDataTable)(base.Tables["Daily_Net_Bill_Table"]));
            if ((initTable == true))
            {
                if ((this.tableDaily_Net_Bill_Table != null))
                {
                    this.tableDaily_Net_Bill_Table.InitVars();
                }
            }
            this.tableVan_Net_Bill_Table = ((Van_Net_Bill_TableDataTable)(base.Tables["Van_Net_Bill_Table"]));
            if ((initTable == true))
            {
                if ((this.tableVan_Net_Bill_Table != null))
                {
                    this.tableVan_Net_Bill_Table.InitVars();
                }
            }
            this.tableSchool_Net_Bill_Table = ((School_Net_Bill_TableDataTable)(base.Tables["School_Net_Bill_Table"]));
            if ((initTable == true))
            {
                if ((this.tableSchool_Net_Bill_Table != null))
                {
                    this.tableSchool_Net_Bill_Table.InitVars();
                }
            }
            this.tableHostel_Net_Bill_Table = ((Hostel_Net_Bill_TableDataTable)(base.Tables["Hostel_Net_Bill_Table"]));
            if ((initTable == true))
            {
                if ((this.tableHostel_Net_Bill_Table != null))
                {
                    this.tableHostel_Net_Bill_Table.InitVars();
                }
            }
            this.tableStationary_Net_Bill_Table = ((Stationary_Net_Bill_TableDataTable)(base.Tables["Stationary_Net_Bill_Table"]));
            if ((initTable == true))
            {
                if ((this.tableStationary_Net_Bill_Table != null))
                {
                    this.tableStationary_Net_Bill_Table.InitVars();
                }
            }
            this.tableOther_School_Net_Bill_Table = ((Other_School_Net_Bill_TableDataTable)(base.Tables["Other_School_Net_Bill_Table"]));
            if ((initTable == true))
            {
                if ((this.tableOther_School_Net_Bill_Table != null))
                {
                    this.tableOther_School_Net_Bill_Table.InitVars();
                }
            }
            this.tableOther_Hostel_Net_Bill_Table = ((Other_Hostel_Net_Bill_TableDataTable)(base.Tables["Other_Hostel_Net_Bill_Table"]));
            if ((initTable == true))
            {
                if ((this.tableOther_Hostel_Net_Bill_Table != null))
                {
                    this.tableOther_Hostel_Net_Bill_Table.InitVars();
                }
            }
            this.tableSchool_Fees_Not_Paid_Table = ((School_Fees_Not_Paid_TableDataTable)(base.Tables["School_Fees_Not_Paid_Table"]));
            if ((initTable == true))
            {
                if ((this.tableSchool_Fees_Not_Paid_Table != null))
                {
                    this.tableSchool_Fees_Not_Paid_Table.InitVars();
                }
            }
            this.tableVan_Fees_Not_Paid_Table = ((Van_Fees_Not_Paid_TableDataTable)(base.Tables["Van_Fees_Not_Paid_Table"]));
            if ((initTable == true))
            {
                if ((this.tableVan_Fees_Not_Paid_Table != null))
                {
                    this.tableVan_Fees_Not_Paid_Table.InitVars();
                }
            }
            this.tableHostel_Fees_Not_Paid_Table = ((Hostel_Fees_Not_Paid_TableDataTable)(base.Tables["Hostel_Fees_Not_Paid_Table"]));
            if ((initTable == true))
            {
                if ((this.tableHostel_Fees_Not_Paid_Table != null))
                {
                    this.tableHostel_Fees_Not_Paid_Table.InitVars();
                }
            }
            this.tableDaily_Net_Bill_Amunt_Table = ((Daily_Net_Bill_Amunt_TableDataTable)(base.Tables["Daily_Net_Bill_Amunt_Table"]));
            if ((initTable == true))
            {
                if ((this.tableDaily_Net_Bill_Amunt_Table != null))
                {
                    this.tableDaily_Net_Bill_Amunt_Table.InitVars();
                }
            }
            this.tableStationary_Paid_Net_Bill_Table = ((Stationary_Paid_Net_Bill_TableDataTable)(base.Tables["Stationary_Paid_Net_Bill_Table"]));
            if ((initTable == true))
            {
                if ((this.tableStationary_Paid_Net_Bill_Table != null))
                {
                    this.tableStationary_Paid_Net_Bill_Table.InitVars();
                }
            }
            this.tableStationary_Fees_Not_Paid_Table = ((Stationary_Fees_Not_Paid_TableDataTable)(base.Tables["Stationary_Fees_Not_Paid_Table"]));
            if ((initTable == true))
            {
                if ((this.tableStationary_Fees_Not_Paid_Table != null))
                {
                    this.tableStationary_Fees_Not_Paid_Table.InitVars();
                }
            }
            this.tableArrear_Student_Table = ((Arrear_Student_TableDataTable)(base.Tables["Arrear_Student_Table"]));
            if ((initTable == true))
            {
                if ((this.tableArrear_Student_Table != null))
                {
                    this.tableArrear_Student_Table.InitVars();
                }
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass()
        {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDaily_Net_Bill_Table = new Daily_Net_Bill_TableDataTable();
            base.Tables.Add(this.tableDaily_Net_Bill_Table);
            this.tableVan_Net_Bill_Table = new Van_Net_Bill_TableDataTable();
            base.Tables.Add(this.tableVan_Net_Bill_Table);
            this.tableSchool_Net_Bill_Table = new School_Net_Bill_TableDataTable();
            base.Tables.Add(this.tableSchool_Net_Bill_Table);
            this.tableHostel_Net_Bill_Table = new Hostel_Net_Bill_TableDataTable();
            base.Tables.Add(this.tableHostel_Net_Bill_Table);
            this.tableStationary_Net_Bill_Table = new Stationary_Net_Bill_TableDataTable();
            base.Tables.Add(this.tableStationary_Net_Bill_Table);
            this.tableOther_School_Net_Bill_Table = new Other_School_Net_Bill_TableDataTable();
            base.Tables.Add(this.tableOther_School_Net_Bill_Table);
            this.tableOther_Hostel_Net_Bill_Table = new Other_Hostel_Net_Bill_TableDataTable();
            base.Tables.Add(this.tableOther_Hostel_Net_Bill_Table);
            this.tableSchool_Fees_Not_Paid_Table = new School_Fees_Not_Paid_TableDataTable();
            base.Tables.Add(this.tableSchool_Fees_Not_Paid_Table);
            this.tableVan_Fees_Not_Paid_Table = new Van_Fees_Not_Paid_TableDataTable();
            base.Tables.Add(this.tableVan_Fees_Not_Paid_Table);
            this.tableHostel_Fees_Not_Paid_Table = new Hostel_Fees_Not_Paid_TableDataTable();
            base.Tables.Add(this.tableHostel_Fees_Not_Paid_Table);
            this.tableDaily_Net_Bill_Amunt_Table = new Daily_Net_Bill_Amunt_TableDataTable();
            base.Tables.Add(this.tableDaily_Net_Bill_Amunt_Table);
            this.tableStationary_Paid_Net_Bill_Table = new Stationary_Paid_Net_Bill_TableDataTable();
            base.Tables.Add(this.tableStationary_Paid_Net_Bill_Table);
            this.tableStationary_Fees_Not_Paid_Table = new Stationary_Fees_Not_Paid_TableDataTable();
            base.Tables.Add(this.tableStationary_Fees_Not_Paid_Table);
            this.tableArrear_Student_Table = new Arrear_Student_TableDataTable();
            base.Tables.Add(this.tableArrear_Student_Table);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDaily_Net_Bill_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVan_Net_Bill_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSchool_Net_Bill_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHostel_Net_Bill_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStationary_Net_Bill_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOther_School_Net_Bill_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOther_Hostel_Net_Bill_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSchool_Fees_Not_Paid_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVan_Fees_Not_Paid_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHostel_Fees_Not_Paid_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDaily_Net_Bill_Amunt_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStationary_Paid_Net_Bill_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeStationary_Fees_Not_Paid_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeArrear_Student_Table()
        {
            return false;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
        {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
            {
                this.InitVars();
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
        {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace))
            {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try
                {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                    {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length))
                        {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length)
                                        && (s1.ReadByte() == s2.ReadByte())); )
                            {
                                ;
                            }
                            if ((s1.Position == s1.Length))
                            {
                                return type;
                            }
                        }
                    }
                }
                finally
                {
                    if ((s1 != null))
                    {
                        s1.Close();
                    }
                    if ((s2 != null))
                    {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }

        public delegate void Daily_Net_Bill_TableRowChangeEventHandler(object sender, Daily_Net_Bill_TableRowChangeEvent e);

        public delegate void Van_Net_Bill_TableRowChangeEventHandler(object sender, Van_Net_Bill_TableRowChangeEvent e);

        public delegate void School_Net_Bill_TableRowChangeEventHandler(object sender, School_Net_Bill_TableRowChangeEvent e);

        public delegate void Hostel_Net_Bill_TableRowChangeEventHandler(object sender, Hostel_Net_Bill_TableRowChangeEvent e);

        public delegate void Stationary_Net_Bill_TableRowChangeEventHandler(object sender, Stationary_Net_Bill_TableRowChangeEvent e);

        public delegate void Other_School_Net_Bill_TableRowChangeEventHandler(object sender, Other_School_Net_Bill_TableRowChangeEvent e);

        public delegate void Other_Hostel_Net_Bill_TableRowChangeEventHandler(object sender, Other_Hostel_Net_Bill_TableRowChangeEvent e);

        public delegate void School_Fees_Not_Paid_TableRowChangeEventHandler(object sender, School_Fees_Not_Paid_TableRowChangeEvent e);

        public delegate void Van_Fees_Not_Paid_TableRowChangeEventHandler(object sender, Van_Fees_Not_Paid_TableRowChangeEvent e);

        public delegate void Hostel_Fees_Not_Paid_TableRowChangeEventHandler(object sender, Hostel_Fees_Not_Paid_TableRowChangeEvent e);

        public delegate void Daily_Net_Bill_Amunt_TableRowChangeEventHandler(object sender, Daily_Net_Bill_Amunt_TableRowChangeEvent e);

        public delegate void Stationary_Paid_Net_Bill_TableRowChangeEventHandler(object sender, Stationary_Paid_Net_Bill_TableRowChangeEvent e);

        public delegate void Stationary_Fees_Not_Paid_TableRowChangeEventHandler(object sender, Stationary_Fees_Not_Paid_TableRowChangeEvent e);

        public delegate void Arrear_Student_TableRowChangeEventHandler(object sender, Arrear_Student_TableRowChangeEvent e);

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Daily_Net_Bill_TableDataTable : global::System.Data.TypedTableBase<Daily_Net_Bill_TableRow>
        {

            private global::System.Data.DataColumn columnBill_Date;

            private global::System.Data.DataColumn columnDescription;

            private global::System.Data.DataColumn columnAmount;

            private global::System.Data.DataColumn columnTotal;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_TableDataTable()
            {
                this.TableName = "Daily_Net_Bill_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Daily_Net_Bill_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Daily_Net_Bill_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn
            {
                get
                {
                    return this.columnBill_Date;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn
            {
                get
                {
                    return this.columnDescription;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn
            {
                get
                {
                    return this.columnAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn
            {
                get
                {
                    return this.columnTotal;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_TableRow this[int index]
            {
                get
                {
                    return ((Daily_Net_Bill_TableRow)(this.Rows[index]));
                }
            }

            public event Daily_Net_Bill_TableRowChangeEventHandler Daily_Net_Bill_TableRowChanging;

            public event Daily_Net_Bill_TableRowChangeEventHandler Daily_Net_Bill_TableRowChanged;

            public event Daily_Net_Bill_TableRowChangeEventHandler Daily_Net_Bill_TableRowDeleting;

            public event Daily_Net_Bill_TableRowChangeEventHandler Daily_Net_Bill_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDaily_Net_Bill_TableRow(Daily_Net_Bill_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_TableRow AddDaily_Net_Bill_TableRow(string Bill_Date, string Description, string Amount, string Total)
            {
                Daily_Net_Bill_TableRow rowDaily_Net_Bill_TableRow = ((Daily_Net_Bill_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Bill_Date,
                        Description,
                        Amount,
                        Total};
                rowDaily_Net_Bill_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDaily_Net_Bill_TableRow);
                return rowDaily_Net_Bill_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Daily_Net_Bill_TableDataTable cln = ((Daily_Net_Bill_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Daily_Net_Bill_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnBill_Date = base.Columns["Bill_Date"];
                this.columnDescription = base.Columns["Description"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTotal = base.Columns["Total"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnBill_Date = new global::System.Data.DataColumn("Bill_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_TableRow NewDaily_Net_Bill_TableRow()
            {
                return ((Daily_Net_Bill_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Daily_Net_Bill_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Daily_Net_Bill_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Daily_Net_Bill_TableRowChanged != null))
                {
                    this.Daily_Net_Bill_TableRowChanged(this, new Daily_Net_Bill_TableRowChangeEvent(((Daily_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Daily_Net_Bill_TableRowChanging != null))
                {
                    this.Daily_Net_Bill_TableRowChanging(this, new Daily_Net_Bill_TableRowChangeEvent(((Daily_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Daily_Net_Bill_TableRowDeleted != null))
                {
                    this.Daily_Net_Bill_TableRowDeleted(this, new Daily_Net_Bill_TableRowChangeEvent(((Daily_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Daily_Net_Bill_TableRowDeleting != null))
                {
                    this.Daily_Net_Bill_TableRowDeleting(this, new Daily_Net_Bill_TableRowChangeEvent(((Daily_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDaily_Net_Bill_TableRow(Daily_Net_Bill_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Daily_Net_Bill_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Van_Net_Bill_TableDataTable : global::System.Data.TypedTableBase<Van_Net_Bill_TableRow>
        {

            private global::System.Data.DataColumn columnVBill_No;

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnAmount;

            private global::System.Data.DataColumn columnTotal;

            private global::System.Data.DataColumn columnBill_Date;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Net_Bill_TableDataTable()
            {
                this.TableName = "Van_Net_Bill_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Van_Net_Bill_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Van_Net_Bill_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VBill_NoColumn
            {
                get
                {
                    return this.columnVBill_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn
            {
                get
                {
                    return this.columnAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn
            {
                get
                {
                    return this.columnTotal;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn
            {
                get
                {
                    return this.columnBill_Date;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Net_Bill_TableRow this[int index]
            {
                get
                {
                    return ((Van_Net_Bill_TableRow)(this.Rows[index]));
                }
            }

            public event Van_Net_Bill_TableRowChangeEventHandler Van_Net_Bill_TableRowChanging;

            public event Van_Net_Bill_TableRowChangeEventHandler Van_Net_Bill_TableRowChanged;

            public event Van_Net_Bill_TableRowChangeEventHandler Van_Net_Bill_TableRowDeleting;

            public event Van_Net_Bill_TableRowChangeEventHandler Van_Net_Bill_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVan_Net_Bill_TableRow(Van_Net_Bill_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Net_Bill_TableRow AddVan_Net_Bill_TableRow(string VBill_No, string Admission_No, string Std_Name, string Class, string Section, string Amount, string Total, string Bill_Date)
            {
                Van_Net_Bill_TableRow rowVan_Net_Bill_TableRow = ((Van_Net_Bill_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VBill_No,
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        Amount,
                        Total,
                        Bill_Date};
                rowVan_Net_Bill_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVan_Net_Bill_TableRow);
                return rowVan_Net_Bill_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Van_Net_Bill_TableDataTable cln = ((Van_Net_Bill_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Van_Net_Bill_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnVBill_No = base.Columns["VBill_No"];
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTotal = base.Columns["Total"];
                this.columnBill_Date = base.Columns["Bill_Date"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnVBill_No = new global::System.Data.DataColumn("VBill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVBill_No);
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnBill_Date = new global::System.Data.DataColumn("Bill_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnVBill_No.Caption = "Bill_Date";
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Net_Bill_TableRow NewVan_Net_Bill_TableRow()
            {
                return ((Van_Net_Bill_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Van_Net_Bill_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Van_Net_Bill_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Van_Net_Bill_TableRowChanged != null))
                {
                    this.Van_Net_Bill_TableRowChanged(this, new Van_Net_Bill_TableRowChangeEvent(((Van_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Van_Net_Bill_TableRowChanging != null))
                {
                    this.Van_Net_Bill_TableRowChanging(this, new Van_Net_Bill_TableRowChangeEvent(((Van_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Van_Net_Bill_TableRowDeleted != null))
                {
                    this.Van_Net_Bill_TableRowDeleted(this, new Van_Net_Bill_TableRowChangeEvent(((Van_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Van_Net_Bill_TableRowDeleting != null))
                {
                    this.Van_Net_Bill_TableRowDeleting(this, new Van_Net_Bill_TableRowChangeEvent(((Van_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVan_Net_Bill_TableRow(Van_Net_Bill_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Van_Net_Bill_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class School_Net_Bill_TableDataTable : global::System.Data.TypedTableBase<School_Net_Bill_TableRow>
        {

            private global::System.Data.DataColumn columnSBill_No;

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnAmount;

            private global::System.Data.DataColumn columnTotal;

            private global::System.Data.DataColumn columnBill_Date;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Net_Bill_TableDataTable()
            {
                this.TableName = "School_Net_Bill_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal School_Net_Bill_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected School_Net_Bill_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SBill_NoColumn
            {
                get
                {
                    return this.columnSBill_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn
            {
                get
                {
                    return this.columnAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn
            {
                get
                {
                    return this.columnTotal;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn
            {
                get
                {
                    return this.columnBill_Date;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Net_Bill_TableRow this[int index]
            {
                get
                {
                    return ((School_Net_Bill_TableRow)(this.Rows[index]));
                }
            }

            public event School_Net_Bill_TableRowChangeEventHandler School_Net_Bill_TableRowChanging;

            public event School_Net_Bill_TableRowChangeEventHandler School_Net_Bill_TableRowChanged;

            public event School_Net_Bill_TableRowChangeEventHandler School_Net_Bill_TableRowDeleting;

            public event School_Net_Bill_TableRowChangeEventHandler School_Net_Bill_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSchool_Net_Bill_TableRow(School_Net_Bill_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Net_Bill_TableRow AddSchool_Net_Bill_TableRow(string SBill_No, string Admission_No, string Std_Name, string Class, string Section, string Amount, string Total, string Bill_Date)
            {
                School_Net_Bill_TableRow rowSchool_Net_Bill_TableRow = ((School_Net_Bill_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SBill_No,
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        Amount,
                        Total,
                        Bill_Date};
                rowSchool_Net_Bill_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSchool_Net_Bill_TableRow);
                return rowSchool_Net_Bill_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                School_Net_Bill_TableDataTable cln = ((School_Net_Bill_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new School_Net_Bill_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSBill_No = base.Columns["SBill_No"];
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTotal = base.Columns["Total"];
                this.columnBill_Date = base.Columns["Bill_Date"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSBill_No = new global::System.Data.DataColumn("SBill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBill_No);
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnBill_Date = new global::System.Data.DataColumn("Bill_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnSBill_No.Caption = "Bill_Date";
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Net_Bill_TableRow NewSchool_Net_Bill_TableRow()
            {
                return ((School_Net_Bill_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new School_Net_Bill_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(School_Net_Bill_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.School_Net_Bill_TableRowChanged != null))
                {
                    this.School_Net_Bill_TableRowChanged(this, new School_Net_Bill_TableRowChangeEvent(((School_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.School_Net_Bill_TableRowChanging != null))
                {
                    this.School_Net_Bill_TableRowChanging(this, new School_Net_Bill_TableRowChangeEvent(((School_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.School_Net_Bill_TableRowDeleted != null))
                {
                    this.School_Net_Bill_TableRowDeleted(this, new School_Net_Bill_TableRowChangeEvent(((School_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.School_Net_Bill_TableRowDeleting != null))
                {
                    this.School_Net_Bill_TableRowDeleting(this, new School_Net_Bill_TableRowChangeEvent(((School_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSchool_Net_Bill_TableRow(School_Net_Bill_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "School_Net_Bill_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Hostel_Net_Bill_TableDataTable : global::System.Data.TypedTableBase<Hostel_Net_Bill_TableRow>
        {

            private global::System.Data.DataColumn columnHBill_No;

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnAmount;

            private global::System.Data.DataColumn columnTotal;

            private global::System.Data.DataColumn columnBill_Date;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Net_Bill_TableDataTable()
            {
                this.TableName = "Hostel_Net_Bill_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Hostel_Net_Bill_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Hostel_Net_Bill_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HBill_NoColumn
            {
                get
                {
                    return this.columnHBill_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn
            {
                get
                {
                    return this.columnAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn
            {
                get
                {
                    return this.columnTotal;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn
            {
                get
                {
                    return this.columnBill_Date;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Net_Bill_TableRow this[int index]
            {
                get
                {
                    return ((Hostel_Net_Bill_TableRow)(this.Rows[index]));
                }
            }

            public event Hostel_Net_Bill_TableRowChangeEventHandler Hostel_Net_Bill_TableRowChanging;

            public event Hostel_Net_Bill_TableRowChangeEventHandler Hostel_Net_Bill_TableRowChanged;

            public event Hostel_Net_Bill_TableRowChangeEventHandler Hostel_Net_Bill_TableRowDeleting;

            public event Hostel_Net_Bill_TableRowChangeEventHandler Hostel_Net_Bill_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHostel_Net_Bill_TableRow(Hostel_Net_Bill_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Net_Bill_TableRow AddHostel_Net_Bill_TableRow(string HBill_No, string Admission_No, string Std_Name, string Class, string Section, string Amount, string Total, string Bill_Date)
            {
                Hostel_Net_Bill_TableRow rowHostel_Net_Bill_TableRow = ((Hostel_Net_Bill_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        HBill_No,
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        Amount,
                        Total,
                        Bill_Date};
                rowHostel_Net_Bill_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHostel_Net_Bill_TableRow);
                return rowHostel_Net_Bill_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Hostel_Net_Bill_TableDataTable cln = ((Hostel_Net_Bill_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Hostel_Net_Bill_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnHBill_No = base.Columns["HBill_No"];
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTotal = base.Columns["Total"];
                this.columnBill_Date = base.Columns["Bill_Date"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnHBill_No = new global::System.Data.DataColumn("HBill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHBill_No);
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnBill_Date = new global::System.Data.DataColumn("Bill_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnHBill_No.Caption = "Bill_Date";
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Net_Bill_TableRow NewHostel_Net_Bill_TableRow()
            {
                return ((Hostel_Net_Bill_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Hostel_Net_Bill_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Hostel_Net_Bill_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Hostel_Net_Bill_TableRowChanged != null))
                {
                    this.Hostel_Net_Bill_TableRowChanged(this, new Hostel_Net_Bill_TableRowChangeEvent(((Hostel_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Hostel_Net_Bill_TableRowChanging != null))
                {
                    this.Hostel_Net_Bill_TableRowChanging(this, new Hostel_Net_Bill_TableRowChangeEvent(((Hostel_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Hostel_Net_Bill_TableRowDeleted != null))
                {
                    this.Hostel_Net_Bill_TableRowDeleted(this, new Hostel_Net_Bill_TableRowChangeEvent(((Hostel_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Hostel_Net_Bill_TableRowDeleting != null))
                {
                    this.Hostel_Net_Bill_TableRowDeleting(this, new Hostel_Net_Bill_TableRowChangeEvent(((Hostel_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHostel_Net_Bill_TableRow(Hostel_Net_Bill_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Hostel_Net_Bill_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Stationary_Net_Bill_TableDataTable : global::System.Data.TypedTableBase<Stationary_Net_Bill_TableRow>
        {

            private global::System.Data.DataColumn columnSBill_No;

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnAmount;

            private global::System.Data.DataColumn columnTotal;

            private global::System.Data.DataColumn columnBill_Date;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Net_Bill_TableDataTable()
            {
                this.TableName = "Stationary_Net_Bill_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Stationary_Net_Bill_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Stationary_Net_Bill_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SBill_NoColumn
            {
                get
                {
                    return this.columnSBill_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn
            {
                get
                {
                    return this.columnAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn
            {
                get
                {
                    return this.columnTotal;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn
            {
                get
                {
                    return this.columnBill_Date;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Net_Bill_TableRow this[int index]
            {
                get
                {
                    return ((Stationary_Net_Bill_TableRow)(this.Rows[index]));
                }
            }

            public event Stationary_Net_Bill_TableRowChangeEventHandler Stationary_Net_Bill_TableRowChanging;

            public event Stationary_Net_Bill_TableRowChangeEventHandler Stationary_Net_Bill_TableRowChanged;

            public event Stationary_Net_Bill_TableRowChangeEventHandler Stationary_Net_Bill_TableRowDeleting;

            public event Stationary_Net_Bill_TableRowChangeEventHandler Stationary_Net_Bill_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStationary_Net_Bill_TableRow(Stationary_Net_Bill_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Net_Bill_TableRow AddStationary_Net_Bill_TableRow(string SBill_No, string Admission_No, string Std_Name, string Class, string Section, string Amount, string Total, string Bill_Date)
            {
                Stationary_Net_Bill_TableRow rowStationary_Net_Bill_TableRow = ((Stationary_Net_Bill_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SBill_No,
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        Amount,
                        Total,
                        Bill_Date};
                rowStationary_Net_Bill_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStationary_Net_Bill_TableRow);
                return rowStationary_Net_Bill_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Stationary_Net_Bill_TableDataTable cln = ((Stationary_Net_Bill_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Stationary_Net_Bill_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSBill_No = base.Columns["SBill_No"];
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTotal = base.Columns["Total"];
                this.columnBill_Date = base.Columns["Bill_Date"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSBill_No = new global::System.Data.DataColumn("SBill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSBill_No);
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnBill_Date = new global::System.Data.DataColumn("Bill_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnSBill_No.Caption = "Bill_Date";
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Net_Bill_TableRow NewStationary_Net_Bill_TableRow()
            {
                return ((Stationary_Net_Bill_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Stationary_Net_Bill_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Stationary_Net_Bill_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Stationary_Net_Bill_TableRowChanged != null))
                {
                    this.Stationary_Net_Bill_TableRowChanged(this, new Stationary_Net_Bill_TableRowChangeEvent(((Stationary_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Stationary_Net_Bill_TableRowChanging != null))
                {
                    this.Stationary_Net_Bill_TableRowChanging(this, new Stationary_Net_Bill_TableRowChangeEvent(((Stationary_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Stationary_Net_Bill_TableRowDeleted != null))
                {
                    this.Stationary_Net_Bill_TableRowDeleted(this, new Stationary_Net_Bill_TableRowChangeEvent(((Stationary_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Stationary_Net_Bill_TableRowDeleting != null))
                {
                    this.Stationary_Net_Bill_TableRowDeleting(this, new Stationary_Net_Bill_TableRowChangeEvent(((Stationary_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStationary_Net_Bill_TableRow(Stationary_Net_Bill_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Stationary_Net_Bill_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Other_School_Net_Bill_TableDataTable : global::System.Data.TypedTableBase<Other_School_Net_Bill_TableRow>
        {

            private global::System.Data.DataColumn columnOSBill_No;

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnAmount;

            private global::System.Data.DataColumn columnTotal;

            private global::System.Data.DataColumn columnBill_Date;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_School_Net_Bill_TableDataTable()
            {
                this.TableName = "Other_School_Net_Bill_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Other_School_Net_Bill_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Other_School_Net_Bill_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OSBill_NoColumn
            {
                get
                {
                    return this.columnOSBill_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn
            {
                get
                {
                    return this.columnAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn
            {
                get
                {
                    return this.columnTotal;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn
            {
                get
                {
                    return this.columnBill_Date;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_School_Net_Bill_TableRow this[int index]
            {
                get
                {
                    return ((Other_School_Net_Bill_TableRow)(this.Rows[index]));
                }
            }

            public event Other_School_Net_Bill_TableRowChangeEventHandler Other_School_Net_Bill_TableRowChanging;

            public event Other_School_Net_Bill_TableRowChangeEventHandler Other_School_Net_Bill_TableRowChanged;

            public event Other_School_Net_Bill_TableRowChangeEventHandler Other_School_Net_Bill_TableRowDeleting;

            public event Other_School_Net_Bill_TableRowChangeEventHandler Other_School_Net_Bill_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOther_School_Net_Bill_TableRow(Other_School_Net_Bill_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_School_Net_Bill_TableRow AddOther_School_Net_Bill_TableRow(string OSBill_No, string Admission_No, string Std_Name, string Class, string Section, string Amount, string Total, string Bill_Date)
            {
                Other_School_Net_Bill_TableRow rowOther_School_Net_Bill_TableRow = ((Other_School_Net_Bill_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OSBill_No,
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        Amount,
                        Total,
                        Bill_Date};
                rowOther_School_Net_Bill_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOther_School_Net_Bill_TableRow);
                return rowOther_School_Net_Bill_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Other_School_Net_Bill_TableDataTable cln = ((Other_School_Net_Bill_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Other_School_Net_Bill_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnOSBill_No = base.Columns["OSBill_No"];
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTotal = base.Columns["Total"];
                this.columnBill_Date = base.Columns["Bill_Date"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnOSBill_No = new global::System.Data.DataColumn("OSBill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOSBill_No);
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnBill_Date = new global::System.Data.DataColumn("Bill_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnOSBill_No.Caption = "Bill_Date";
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_School_Net_Bill_TableRow NewOther_School_Net_Bill_TableRow()
            {
                return ((Other_School_Net_Bill_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Other_School_Net_Bill_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Other_School_Net_Bill_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Other_School_Net_Bill_TableRowChanged != null))
                {
                    this.Other_School_Net_Bill_TableRowChanged(this, new Other_School_Net_Bill_TableRowChangeEvent(((Other_School_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Other_School_Net_Bill_TableRowChanging != null))
                {
                    this.Other_School_Net_Bill_TableRowChanging(this, new Other_School_Net_Bill_TableRowChangeEvent(((Other_School_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Other_School_Net_Bill_TableRowDeleted != null))
                {
                    this.Other_School_Net_Bill_TableRowDeleted(this, new Other_School_Net_Bill_TableRowChangeEvent(((Other_School_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Other_School_Net_Bill_TableRowDeleting != null))
                {
                    this.Other_School_Net_Bill_TableRowDeleting(this, new Other_School_Net_Bill_TableRowChangeEvent(((Other_School_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOther_School_Net_Bill_TableRow(Other_School_Net_Bill_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Other_School_Net_Bill_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Other_Hostel_Net_Bill_TableDataTable : global::System.Data.TypedTableBase<Other_Hostel_Net_Bill_TableRow>
        {

            private global::System.Data.DataColumn columnOHBill_No;

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnAmount;

            private global::System.Data.DataColumn columnTotal;

            private global::System.Data.DataColumn columnBill_Date;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_Hostel_Net_Bill_TableDataTable()
            {
                this.TableName = "Other_Hostel_Net_Bill_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Other_Hostel_Net_Bill_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Other_Hostel_Net_Bill_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OHBill_NoColumn
            {
                get
                {
                    return this.columnOHBill_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn
            {
                get
                {
                    return this.columnAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn
            {
                get
                {
                    return this.columnTotal;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn
            {
                get
                {
                    return this.columnBill_Date;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_Hostel_Net_Bill_TableRow this[int index]
            {
                get
                {
                    return ((Other_Hostel_Net_Bill_TableRow)(this.Rows[index]));
                }
            }

            public event Other_Hostel_Net_Bill_TableRowChangeEventHandler Other_Hostel_Net_Bill_TableRowChanging;

            public event Other_Hostel_Net_Bill_TableRowChangeEventHandler Other_Hostel_Net_Bill_TableRowChanged;

            public event Other_Hostel_Net_Bill_TableRowChangeEventHandler Other_Hostel_Net_Bill_TableRowDeleting;

            public event Other_Hostel_Net_Bill_TableRowChangeEventHandler Other_Hostel_Net_Bill_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOther_Hostel_Net_Bill_TableRow(Other_Hostel_Net_Bill_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_Hostel_Net_Bill_TableRow AddOther_Hostel_Net_Bill_TableRow(string OHBill_No, string Admission_No, string Std_Name, string Class, string Section, string Amount, string Total, string Bill_Date)
            {
                Other_Hostel_Net_Bill_TableRow rowOther_Hostel_Net_Bill_TableRow = ((Other_Hostel_Net_Bill_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OHBill_No,
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        Amount,
                        Total,
                        Bill_Date};
                rowOther_Hostel_Net_Bill_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOther_Hostel_Net_Bill_TableRow);
                return rowOther_Hostel_Net_Bill_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Other_Hostel_Net_Bill_TableDataTable cln = ((Other_Hostel_Net_Bill_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Other_Hostel_Net_Bill_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnOHBill_No = base.Columns["OHBill_No"];
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTotal = base.Columns["Total"];
                this.columnBill_Date = base.Columns["Bill_Date"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnOHBill_No = new global::System.Data.DataColumn("OHBill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOHBill_No);
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnBill_Date = new global::System.Data.DataColumn("Bill_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnOHBill_No.Caption = "Bill_Date";
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_Hostel_Net_Bill_TableRow NewOther_Hostel_Net_Bill_TableRow()
            {
                return ((Other_Hostel_Net_Bill_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Other_Hostel_Net_Bill_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Other_Hostel_Net_Bill_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Other_Hostel_Net_Bill_TableRowChanged != null))
                {
                    this.Other_Hostel_Net_Bill_TableRowChanged(this, new Other_Hostel_Net_Bill_TableRowChangeEvent(((Other_Hostel_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Other_Hostel_Net_Bill_TableRowChanging != null))
                {
                    this.Other_Hostel_Net_Bill_TableRowChanging(this, new Other_Hostel_Net_Bill_TableRowChangeEvent(((Other_Hostel_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Other_Hostel_Net_Bill_TableRowDeleted != null))
                {
                    this.Other_Hostel_Net_Bill_TableRowDeleted(this, new Other_Hostel_Net_Bill_TableRowChangeEvent(((Other_Hostel_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Other_Hostel_Net_Bill_TableRowDeleting != null))
                {
                    this.Other_Hostel_Net_Bill_TableRowDeleting(this, new Other_Hostel_Net_Bill_TableRowChangeEvent(((Other_Hostel_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOther_Hostel_Net_Bill_TableRow(Other_Hostel_Net_Bill_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Other_Hostel_Net_Bill_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class School_Fees_Not_Paid_TableDataTable : global::System.Data.TypedTableBase<School_Fees_Not_Paid_TableRow>
        {

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Fees_Not_Paid_TableDataTable()
            {
                this.TableName = "School_Fees_Not_Paid_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal School_Fees_Not_Paid_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected School_Fees_Not_Paid_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Fees_Not_Paid_TableRow this[int index]
            {
                get
                {
                    return ((School_Fees_Not_Paid_TableRow)(this.Rows[index]));
                }
            }

            public event School_Fees_Not_Paid_TableRowChangeEventHandler School_Fees_Not_Paid_TableRowChanging;

            public event School_Fees_Not_Paid_TableRowChangeEventHandler School_Fees_Not_Paid_TableRowChanged;

            public event School_Fees_Not_Paid_TableRowChangeEventHandler School_Fees_Not_Paid_TableRowDeleting;

            public event School_Fees_Not_Paid_TableRowChangeEventHandler School_Fees_Not_Paid_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSchool_Fees_Not_Paid_TableRow(School_Fees_Not_Paid_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Fees_Not_Paid_TableRow AddSchool_Fees_Not_Paid_TableRow(string Admission_No, string Std_Name, string Class, string Section)
            {
                School_Fees_Not_Paid_TableRow rowSchool_Fees_Not_Paid_TableRow = ((School_Fees_Not_Paid_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Admission_No,
                        Std_Name,
                        Class,
                        Section};
                rowSchool_Fees_Not_Paid_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSchool_Fees_Not_Paid_TableRow);
                return rowSchool_Fees_Not_Paid_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                School_Fees_Not_Paid_TableDataTable cln = ((School_Fees_Not_Paid_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new School_Fees_Not_Paid_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Fees_Not_Paid_TableRow NewSchool_Fees_Not_Paid_TableRow()
            {
                return ((School_Fees_Not_Paid_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new School_Fees_Not_Paid_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(School_Fees_Not_Paid_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.School_Fees_Not_Paid_TableRowChanged != null))
                {
                    this.School_Fees_Not_Paid_TableRowChanged(this, new School_Fees_Not_Paid_TableRowChangeEvent(((School_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.School_Fees_Not_Paid_TableRowChanging != null))
                {
                    this.School_Fees_Not_Paid_TableRowChanging(this, new School_Fees_Not_Paid_TableRowChangeEvent(((School_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.School_Fees_Not_Paid_TableRowDeleted != null))
                {
                    this.School_Fees_Not_Paid_TableRowDeleted(this, new School_Fees_Not_Paid_TableRowChangeEvent(((School_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.School_Fees_Not_Paid_TableRowDeleting != null))
                {
                    this.School_Fees_Not_Paid_TableRowDeleting(this, new School_Fees_Not_Paid_TableRowChangeEvent(((School_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSchool_Fees_Not_Paid_TableRow(School_Fees_Not_Paid_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "School_Fees_Not_Paid_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Van_Fees_Not_Paid_TableDataTable : global::System.Data.TypedTableBase<Van_Fees_Not_Paid_TableRow>
        {

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnSMonth;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Fees_Not_Paid_TableDataTable()
            {
                this.TableName = "Van_Fees_Not_Paid_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Van_Fees_Not_Paid_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Van_Fees_Not_Paid_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMonthColumn
            {
                get
                {
                    return this.columnSMonth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Fees_Not_Paid_TableRow this[int index]
            {
                get
                {
                    return ((Van_Fees_Not_Paid_TableRow)(this.Rows[index]));
                }
            }

            public event Van_Fees_Not_Paid_TableRowChangeEventHandler Van_Fees_Not_Paid_TableRowChanging;

            public event Van_Fees_Not_Paid_TableRowChangeEventHandler Van_Fees_Not_Paid_TableRowChanged;

            public event Van_Fees_Not_Paid_TableRowChangeEventHandler Van_Fees_Not_Paid_TableRowDeleting;

            public event Van_Fees_Not_Paid_TableRowChangeEventHandler Van_Fees_Not_Paid_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVan_Fees_Not_Paid_TableRow(Van_Fees_Not_Paid_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Fees_Not_Paid_TableRow AddVan_Fees_Not_Paid_TableRow(string Admission_No, string Std_Name, string Class, string Section, string SMonth)
            {
                Van_Fees_Not_Paid_TableRow rowVan_Fees_Not_Paid_TableRow = ((Van_Fees_Not_Paid_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        SMonth};
                rowVan_Fees_Not_Paid_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVan_Fees_Not_Paid_TableRow);
                return rowVan_Fees_Not_Paid_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Van_Fees_Not_Paid_TableDataTable cln = ((Van_Fees_Not_Paid_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Van_Fees_Not_Paid_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnSMonth = base.Columns["SMonth"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnSMonth = new global::System.Data.DataColumn("SMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMonth);
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Fees_Not_Paid_TableRow NewVan_Fees_Not_Paid_TableRow()
            {
                return ((Van_Fees_Not_Paid_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Van_Fees_Not_Paid_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Van_Fees_Not_Paid_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Van_Fees_Not_Paid_TableRowChanged != null))
                {
                    this.Van_Fees_Not_Paid_TableRowChanged(this, new Van_Fees_Not_Paid_TableRowChangeEvent(((Van_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Van_Fees_Not_Paid_TableRowChanging != null))
                {
                    this.Van_Fees_Not_Paid_TableRowChanging(this, new Van_Fees_Not_Paid_TableRowChangeEvent(((Van_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Van_Fees_Not_Paid_TableRowDeleted != null))
                {
                    this.Van_Fees_Not_Paid_TableRowDeleted(this, new Van_Fees_Not_Paid_TableRowChangeEvent(((Van_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Van_Fees_Not_Paid_TableRowDeleting != null))
                {
                    this.Van_Fees_Not_Paid_TableRowDeleting(this, new Van_Fees_Not_Paid_TableRowChangeEvent(((Van_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVan_Fees_Not_Paid_TableRow(Van_Fees_Not_Paid_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Van_Fees_Not_Paid_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Hostel_Fees_Not_Paid_TableDataTable : global::System.Data.TypedTableBase<Hostel_Fees_Not_Paid_TableRow>
        {

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnSMonth;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Fees_Not_Paid_TableDataTable()
            {
                this.TableName = "Hostel_Fees_Not_Paid_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Hostel_Fees_Not_Paid_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Hostel_Fees_Not_Paid_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMonthColumn
            {
                get
                {
                    return this.columnSMonth;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Fees_Not_Paid_TableRow this[int index]
            {
                get
                {
                    return ((Hostel_Fees_Not_Paid_TableRow)(this.Rows[index]));
                }
            }

            public event Hostel_Fees_Not_Paid_TableRowChangeEventHandler Hostel_Fees_Not_Paid_TableRowChanging;

            public event Hostel_Fees_Not_Paid_TableRowChangeEventHandler Hostel_Fees_Not_Paid_TableRowChanged;

            public event Hostel_Fees_Not_Paid_TableRowChangeEventHandler Hostel_Fees_Not_Paid_TableRowDeleting;

            public event Hostel_Fees_Not_Paid_TableRowChangeEventHandler Hostel_Fees_Not_Paid_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHostel_Fees_Not_Paid_TableRow(Hostel_Fees_Not_Paid_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Fees_Not_Paid_TableRow AddHostel_Fees_Not_Paid_TableRow(string Admission_No, string Std_Name, string Class, string Section, string SMonth)
            {
                Hostel_Fees_Not_Paid_TableRow rowHostel_Fees_Not_Paid_TableRow = ((Hostel_Fees_Not_Paid_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        SMonth};
                rowHostel_Fees_Not_Paid_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHostel_Fees_Not_Paid_TableRow);
                return rowHostel_Fees_Not_Paid_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Hostel_Fees_Not_Paid_TableDataTable cln = ((Hostel_Fees_Not_Paid_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Hostel_Fees_Not_Paid_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnSMonth = base.Columns["SMonth"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnSMonth = new global::System.Data.DataColumn("SMonth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMonth);
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Fees_Not_Paid_TableRow NewHostel_Fees_Not_Paid_TableRow()
            {
                return ((Hostel_Fees_Not_Paid_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Hostel_Fees_Not_Paid_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Hostel_Fees_Not_Paid_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Hostel_Fees_Not_Paid_TableRowChanged != null))
                {
                    this.Hostel_Fees_Not_Paid_TableRowChanged(this, new Hostel_Fees_Not_Paid_TableRowChangeEvent(((Hostel_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Hostel_Fees_Not_Paid_TableRowChanging != null))
                {
                    this.Hostel_Fees_Not_Paid_TableRowChanging(this, new Hostel_Fees_Not_Paid_TableRowChangeEvent(((Hostel_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Hostel_Fees_Not_Paid_TableRowDeleted != null))
                {
                    this.Hostel_Fees_Not_Paid_TableRowDeleted(this, new Hostel_Fees_Not_Paid_TableRowChangeEvent(((Hostel_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Hostel_Fees_Not_Paid_TableRowDeleting != null))
                {
                    this.Hostel_Fees_Not_Paid_TableRowDeleting(this, new Hostel_Fees_Not_Paid_TableRowChangeEvent(((Hostel_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHostel_Fees_Not_Paid_TableRow(Hostel_Fees_Not_Paid_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Hostel_Fees_Not_Paid_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Daily_Net_Bill_Amunt_TableDataTable : global::System.Data.TypedTableBase<Daily_Net_Bill_Amunt_TableRow>
        {

            private global::System.Data.DataColumn columnBill_No;

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnDescription;

            private global::System.Data.DataColumn columnAmount;

            private global::System.Data.DataColumn columnTotal;

            private global::System.Data.DataColumn columnBill_Date;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_Amunt_TableDataTable()
            {
                this.TableName = "Daily_Net_Bill_Amunt_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Daily_Net_Bill_Amunt_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Daily_Net_Bill_Amunt_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_NoColumn
            {
                get
                {
                    return this.columnBill_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn
            {
                get
                {
                    return this.columnDescription;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AmountColumn
            {
                get
                {
                    return this.columnAmount;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TotalColumn
            {
                get
                {
                    return this.columnTotal;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bill_DateColumn
            {
                get
                {
                    return this.columnBill_Date;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_Amunt_TableRow this[int index]
            {
                get
                {
                    return ((Daily_Net_Bill_Amunt_TableRow)(this.Rows[index]));
                }
            }

            public event Daily_Net_Bill_Amunt_TableRowChangeEventHandler Daily_Net_Bill_Amunt_TableRowChanging;

            public event Daily_Net_Bill_Amunt_TableRowChangeEventHandler Daily_Net_Bill_Amunt_TableRowChanged;

            public event Daily_Net_Bill_Amunt_TableRowChangeEventHandler Daily_Net_Bill_Amunt_TableRowDeleting;

            public event Daily_Net_Bill_Amunt_TableRowChangeEventHandler Daily_Net_Bill_Amunt_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDaily_Net_Bill_Amunt_TableRow(Daily_Net_Bill_Amunt_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_Amunt_TableRow AddDaily_Net_Bill_Amunt_TableRow(string Bill_No, string Admission_No, string Std_Name, string Class, string Section, string Description, string Amount, string Total, string Bill_Date)
            {
                Daily_Net_Bill_Amunt_TableRow rowDaily_Net_Bill_Amunt_TableRow = ((Daily_Net_Bill_Amunt_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Bill_No,
                        Admission_No,
                        Std_Name,
                        Class,
                        Section,
                        Description,
                        Amount,
                        Total,
                        Bill_Date};
                rowDaily_Net_Bill_Amunt_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDaily_Net_Bill_Amunt_TableRow);
                return rowDaily_Net_Bill_Amunt_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Daily_Net_Bill_Amunt_TableDataTable cln = ((Daily_Net_Bill_Amunt_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Daily_Net_Bill_Amunt_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnBill_No = base.Columns["Bill_No"];
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnDescription = base.Columns["Description"];
                this.columnAmount = base.Columns["Amount"];
                this.columnTotal = base.Columns["Total"];
                this.columnBill_Date = base.Columns["Bill_Date"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnBill_No = new global::System.Data.DataColumn("Bill_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_No);
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnBill_Date = new global::System.Data.DataColumn("Bill_Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBill_Date);
                this.columnBill_No.Caption = "Bill_Date";
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
                this.columnDescription.Caption = "Amount";
                this.columnAmount.Caption = "Total";
                this.columnTotal.Caption = "Bill_Date";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_Amunt_TableRow NewDaily_Net_Bill_Amunt_TableRow()
            {
                return ((Daily_Net_Bill_Amunt_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Daily_Net_Bill_Amunt_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Daily_Net_Bill_Amunt_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Daily_Net_Bill_Amunt_TableRowChanged != null))
                {
                    this.Daily_Net_Bill_Amunt_TableRowChanged(this, new Daily_Net_Bill_Amunt_TableRowChangeEvent(((Daily_Net_Bill_Amunt_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Daily_Net_Bill_Amunt_TableRowChanging != null))
                {
                    this.Daily_Net_Bill_Amunt_TableRowChanging(this, new Daily_Net_Bill_Amunt_TableRowChangeEvent(((Daily_Net_Bill_Amunt_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Daily_Net_Bill_Amunt_TableRowDeleted != null))
                {
                    this.Daily_Net_Bill_Amunt_TableRowDeleted(this, new Daily_Net_Bill_Amunt_TableRowChangeEvent(((Daily_Net_Bill_Amunt_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Daily_Net_Bill_Amunt_TableRowDeleting != null))
                {
                    this.Daily_Net_Bill_Amunt_TableRowDeleting(this, new Daily_Net_Bill_Amunt_TableRowChangeEvent(((Daily_Net_Bill_Amunt_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDaily_Net_Bill_Amunt_TableRow(Daily_Net_Bill_Amunt_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Daily_Net_Bill_Amunt_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Stationary_Paid_Net_Bill_TableDataTable : global::System.Data.TypedTableBase<Stationary_Paid_Net_Bill_TableRow>
        {

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Paid_Net_Bill_TableDataTable()
            {
                this.TableName = "Stationary_Paid_Net_Bill_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Stationary_Paid_Net_Bill_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Stationary_Paid_Net_Bill_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Paid_Net_Bill_TableRow this[int index]
            {
                get
                {
                    return ((Stationary_Paid_Net_Bill_TableRow)(this.Rows[index]));
                }
            }

            public event Stationary_Paid_Net_Bill_TableRowChangeEventHandler Stationary_Paid_Net_Bill_TableRowChanging;

            public event Stationary_Paid_Net_Bill_TableRowChangeEventHandler Stationary_Paid_Net_Bill_TableRowChanged;

            public event Stationary_Paid_Net_Bill_TableRowChangeEventHandler Stationary_Paid_Net_Bill_TableRowDeleting;

            public event Stationary_Paid_Net_Bill_TableRowChangeEventHandler Stationary_Paid_Net_Bill_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStationary_Paid_Net_Bill_TableRow(Stationary_Paid_Net_Bill_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Paid_Net_Bill_TableRow AddStationary_Paid_Net_Bill_TableRow(string Admission_No, string Std_Name, string Class, string Section)
            {
                Stationary_Paid_Net_Bill_TableRow rowStationary_Paid_Net_Bill_TableRow = ((Stationary_Paid_Net_Bill_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Admission_No,
                        Std_Name,
                        Class,
                        Section};
                rowStationary_Paid_Net_Bill_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStationary_Paid_Net_Bill_TableRow);
                return rowStationary_Paid_Net_Bill_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Stationary_Paid_Net_Bill_TableDataTable cln = ((Stationary_Paid_Net_Bill_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Stationary_Paid_Net_Bill_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Paid_Net_Bill_TableRow NewStationary_Paid_Net_Bill_TableRow()
            {
                return ((Stationary_Paid_Net_Bill_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Stationary_Paid_Net_Bill_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Stationary_Paid_Net_Bill_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Stationary_Paid_Net_Bill_TableRowChanged != null))
                {
                    this.Stationary_Paid_Net_Bill_TableRowChanged(this, new Stationary_Paid_Net_Bill_TableRowChangeEvent(((Stationary_Paid_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Stationary_Paid_Net_Bill_TableRowChanging != null))
                {
                    this.Stationary_Paid_Net_Bill_TableRowChanging(this, new Stationary_Paid_Net_Bill_TableRowChangeEvent(((Stationary_Paid_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Stationary_Paid_Net_Bill_TableRowDeleted != null))
                {
                    this.Stationary_Paid_Net_Bill_TableRowDeleted(this, new Stationary_Paid_Net_Bill_TableRowChangeEvent(((Stationary_Paid_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Stationary_Paid_Net_Bill_TableRowDeleting != null))
                {
                    this.Stationary_Paid_Net_Bill_TableRowDeleting(this, new Stationary_Paid_Net_Bill_TableRowChangeEvent(((Stationary_Paid_Net_Bill_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStationary_Paid_Net_Bill_TableRow(Stationary_Paid_Net_Bill_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Stationary_Paid_Net_Bill_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Stationary_Fees_Not_Paid_TableDataTable : global::System.Data.TypedTableBase<Stationary_Fees_Not_Paid_TableRow>
        {

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Fees_Not_Paid_TableDataTable()
            {
                this.TableName = "Stationary_Fees_Not_Paid_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Stationary_Fees_Not_Paid_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Stationary_Fees_Not_Paid_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Fees_Not_Paid_TableRow this[int index]
            {
                get
                {
                    return ((Stationary_Fees_Not_Paid_TableRow)(this.Rows[index]));
                }
            }

            public event Stationary_Fees_Not_Paid_TableRowChangeEventHandler Stationary_Fees_Not_Paid_TableRowChanging;

            public event Stationary_Fees_Not_Paid_TableRowChangeEventHandler Stationary_Fees_Not_Paid_TableRowChanged;

            public event Stationary_Fees_Not_Paid_TableRowChangeEventHandler Stationary_Fees_Not_Paid_TableRowDeleting;

            public event Stationary_Fees_Not_Paid_TableRowChangeEventHandler Stationary_Fees_Not_Paid_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddStationary_Fees_Not_Paid_TableRow(Stationary_Fees_Not_Paid_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Fees_Not_Paid_TableRow AddStationary_Fees_Not_Paid_TableRow(string Admission_No, string Std_Name, string Class, string Section)
            {
                Stationary_Fees_Not_Paid_TableRow rowStationary_Fees_Not_Paid_TableRow = ((Stationary_Fees_Not_Paid_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Admission_No,
                        Std_Name,
                        Class,
                        Section};
                rowStationary_Fees_Not_Paid_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStationary_Fees_Not_Paid_TableRow);
                return rowStationary_Fees_Not_Paid_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Stationary_Fees_Not_Paid_TableDataTable cln = ((Stationary_Fees_Not_Paid_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Stationary_Fees_Not_Paid_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnAdmission_No.Caption = "Description";
                this.columnStd_Name.Caption = "Amount";
                this.columnClass.Caption = "Total";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Fees_Not_Paid_TableRow NewStationary_Fees_Not_Paid_TableRow()
            {
                return ((Stationary_Fees_Not_Paid_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Stationary_Fees_Not_Paid_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Stationary_Fees_Not_Paid_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Stationary_Fees_Not_Paid_TableRowChanged != null))
                {
                    this.Stationary_Fees_Not_Paid_TableRowChanged(this, new Stationary_Fees_Not_Paid_TableRowChangeEvent(((Stationary_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Stationary_Fees_Not_Paid_TableRowChanging != null))
                {
                    this.Stationary_Fees_Not_Paid_TableRowChanging(this, new Stationary_Fees_Not_Paid_TableRowChangeEvent(((Stationary_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Stationary_Fees_Not_Paid_TableRowDeleted != null))
                {
                    this.Stationary_Fees_Not_Paid_TableRowDeleted(this, new Stationary_Fees_Not_Paid_TableRowChangeEvent(((Stationary_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Stationary_Fees_Not_Paid_TableRowDeleting != null))
                {
                    this.Stationary_Fees_Not_Paid_TableRowDeleting(this, new Stationary_Fees_Not_Paid_TableRowChangeEvent(((Stationary_Fees_Not_Paid_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveStationary_Fees_Not_Paid_TableRow(Stationary_Fees_Not_Paid_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Stationary_Fees_Not_Paid_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Arrear_Student_TableDataTable : global::System.Data.TypedTableBase<Arrear_Student_TableRow>
        {

            private global::System.Data.DataColumn columnSYear;

            private global::System.Data.DataColumn columnEYear;

            private global::System.Data.DataColumn columnClass;

            private global::System.Data.DataColumn columnSection;

            private global::System.Data.DataColumn columnStd_Name;

            private global::System.Data.DataColumn columnAdmission_No;

            private global::System.Data.DataColumn columnAccomm_Type;

            private global::System.Data.DataColumn columnVan;

            private global::System.Data.DataColumn columnSchoolBillPay;

            private global::System.Data.DataColumn columnHostelBillPay;

            private global::System.Data.DataColumn columnVanBillPay;

            private global::System.Data.DataColumn columnStationaryBillPay;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Arrear_Student_TableDataTable()
            {
                this.TableName = "Arrear_Student_Table";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Arrear_Student_TableDataTable(global::System.Data.DataTable table)
            {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive))
                {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
                {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace))
                {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Arrear_Student_TableDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
                base(info, context)
            {
                this.InitVars();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYearColumn
            {
                get
                {
                    return this.columnSYear;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EYearColumn
            {
                get
                {
                    return this.columnEYear;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClassColumn
            {
                get
                {
                    return this.columnClass;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SectionColumn
            {
                get
                {
                    return this.columnSection;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Std_NameColumn
            {
                get
                {
                    return this.columnStd_Name;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Admission_NoColumn
            {
                get
                {
                    return this.columnAdmission_No;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Accomm_TypeColumn
            {
                get
                {
                    return this.columnAccomm_Type;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VanColumn
            {
                get
                {
                    return this.columnVan;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SchoolBillPayColumn
            {
                get
                {
                    return this.columnSchoolBillPay;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HostelBillPayColumn
            {
                get
                {
                    return this.columnHostelBillPay;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VanBillPayColumn
            {
                get
                {
                    return this.columnVanBillPay;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StationaryBillPayColumn
            {
                get
                {
                    return this.columnStationaryBillPay;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count
            {
                get
                {
                    return this.Rows.Count;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Arrear_Student_TableRow this[int index]
            {
                get
                {
                    return ((Arrear_Student_TableRow)(this.Rows[index]));
                }
            }

            public event Arrear_Student_TableRowChangeEventHandler Arrear_Student_TableRowChanging;

            public event Arrear_Student_TableRowChangeEventHandler Arrear_Student_TableRowChanged;

            public event Arrear_Student_TableRowChangeEventHandler Arrear_Student_TableRowDeleting;

            public event Arrear_Student_TableRowChangeEventHandler Arrear_Student_TableRowDeleted;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddArrear_Student_TableRow(Arrear_Student_TableRow row)
            {
                this.Rows.Add(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Arrear_Student_TableRow AddArrear_Student_TableRow(string SYear, string EYear, string Class, string Section, string Std_Name, string Admission_No, string Accomm_Type, string Van, string SchoolBillPay, string HostelBillPay, string VanBillPay, string StationaryBillPay)
            {
                Arrear_Student_TableRow rowArrear_Student_TableRow = ((Arrear_Student_TableRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SYear,
                        EYear,
                        Class,
                        Section,
                        Std_Name,
                        Admission_No,
                        Accomm_Type,
                        Van,
                        SchoolBillPay,
                        HostelBillPay,
                        VanBillPay,
                        StationaryBillPay};
                rowArrear_Student_TableRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowArrear_Student_TableRow);
                return rowArrear_Student_TableRow;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone()
            {
                Arrear_Student_TableDataTable cln = ((Arrear_Student_TableDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance()
            {
                return new Arrear_Student_TableDataTable();
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars()
            {
                this.columnSYear = base.Columns["SYear"];
                this.columnEYear = base.Columns["EYear"];
                this.columnClass = base.Columns["Class"];
                this.columnSection = base.Columns["Section"];
                this.columnStd_Name = base.Columns["Std_Name"];
                this.columnAdmission_No = base.Columns["Admission_No"];
                this.columnAccomm_Type = base.Columns["Accomm_Type"];
                this.columnVan = base.Columns["Van"];
                this.columnSchoolBillPay = base.Columns["SchoolBillPay"];
                this.columnHostelBillPay = base.Columns["HostelBillPay"];
                this.columnVanBillPay = base.Columns["VanBillPay"];
                this.columnStationaryBillPay = base.Columns["StationaryBillPay"];
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass()
            {
                this.columnSYear = new global::System.Data.DataColumn("SYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYear);
                this.columnEYear = new global::System.Data.DataColumn("EYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEYear);
                this.columnClass = new global::System.Data.DataColumn("Class", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClass);
                this.columnSection = new global::System.Data.DataColumn("Section", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSection);
                this.columnStd_Name = new global::System.Data.DataColumn("Std_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStd_Name);
                this.columnAdmission_No = new global::System.Data.DataColumn("Admission_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmission_No);
                this.columnAccomm_Type = new global::System.Data.DataColumn("Accomm_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccomm_Type);
                this.columnVan = new global::System.Data.DataColumn("Van", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVan);
                this.columnSchoolBillPay = new global::System.Data.DataColumn("SchoolBillPay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSchoolBillPay);
                this.columnHostelBillPay = new global::System.Data.DataColumn("HostelBillPay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHostelBillPay);
                this.columnVanBillPay = new global::System.Data.DataColumn("VanBillPay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVanBillPay);
                this.columnStationaryBillPay = new global::System.Data.DataColumn("StationaryBillPay", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStationaryBillPay);
                this.columnSYear.Caption = "Bill_Date";
                this.columnEYear.Caption = "Description";
                this.columnClass.Caption = "Amount";
                this.columnSection.Caption = "Total";
                this.columnStd_Name.Caption = "Section";
                this.columnAdmission_No.Caption = "Amount";
                this.columnAccomm_Type.Caption = "Total";
                this.columnVan.Caption = "Bill_Date";
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Arrear_Student_TableRow NewArrear_Student_TableRow()
            {
                return ((Arrear_Student_TableRow)(this.NewRow()));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
            {
                return new Arrear_Student_TableRow(builder);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType()
            {
                return typeof(Arrear_Student_TableRow);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanged(e);
                if ((this.Arrear_Student_TableRowChanged != null))
                {
                    this.Arrear_Student_TableRowChanged(this, new Arrear_Student_TableRowChangeEvent(((Arrear_Student_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowChanging(e);
                if ((this.Arrear_Student_TableRowChanging != null))
                {
                    this.Arrear_Student_TableRowChanging(this, new Arrear_Student_TableRowChangeEvent(((Arrear_Student_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleted(e);
                if ((this.Arrear_Student_TableRowDeleted != null))
                {
                    this.Arrear_Student_TableRowDeleted(this, new Arrear_Student_TableRowChangeEvent(((Arrear_Student_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
            {
                base.OnRowDeleting(e);
                if ((this.Arrear_Student_TableRowDeleting != null))
                {
                    this.Arrear_Student_TableRowDeleting(this, new Arrear_Student_TableRowChangeEvent(((Arrear_Student_TableRow)(e.Row)), e.Action));
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveArrear_Student_TableRow(Arrear_Student_TableRow row)
            {
                this.Rows.Remove(row);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
            {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Arrear_Student_TableDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace))
                {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try
                    {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); )
                        {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length))
                            {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length)
                                            && (s1.ReadByte() == s2.ReadByte())); )
                                {
                                    ;
                                }
                                if ((s1.Position == s1.Length))
                                {
                                    return type;
                                }
                            }
                        }
                    }
                    finally
                    {
                        if ((s1 != null))
                        {
                            s1.Close();
                        }
                        if ((s2 != null))
                        {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Daily_Net_Bill_TableRow : global::System.Data.DataRow
        {

            private Daily_Net_Bill_TableDataTable tableDaily_Net_Bill_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Daily_Net_Bill_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableDaily_Net_Bill_Table = ((Daily_Net_Bill_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Date
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Table.Bill_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Date\' in table \'Daily_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Table.Bill_DateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Table.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Daily_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Table.DescriptionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Table.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Daily_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Table.AmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'Daily_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Table.TotalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_DateNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Table.Bill_DateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_DateNull()
            {
                this[this.tableDaily_Net_Bill_Table.Bill_DateColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Table.DescriptionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull()
            {
                this[this.tableDaily_Net_Bill_Table.DescriptionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Table.AmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull()
            {
                this[this.tableDaily_Net_Bill_Table.AmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Table.TotalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull()
            {
                this[this.tableDaily_Net_Bill_Table.TotalColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Van_Net_Bill_TableRow : global::System.Data.DataRow
        {

            private Van_Net_Bill_TableDataTable tableVan_Net_Bill_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Van_Net_Bill_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableVan_Net_Bill_Table = ((Van_Net_Bill_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VBill_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Net_Bill_Table.VBill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'VBill_No\' in table \'Van_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Net_Bill_Table.VBill_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Net_Bill_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Van_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Net_Bill_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Net_Bill_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Van_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Net_Bill_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Net_Bill_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Van_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Net_Bill_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Net_Bill_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Van_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Net_Bill_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Net_Bill_Table.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Van_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Net_Bill_Table.AmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Net_Bill_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'Van_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Net_Bill_Table.TotalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Date
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Net_Bill_Table.Bill_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Date\' in table \'Van_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Net_Bill_Table.Bill_DateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVBill_NoNull()
            {
                return this.IsNull(this.tableVan_Net_Bill_Table.VBill_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVBill_NoNull()
            {
                this[this.tableVan_Net_Bill_Table.VBill_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableVan_Net_Bill_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableVan_Net_Bill_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableVan_Net_Bill_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableVan_Net_Bill_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableVan_Net_Bill_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableVan_Net_Bill_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableVan_Net_Bill_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableVan_Net_Bill_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull()
            {
                return this.IsNull(this.tableVan_Net_Bill_Table.AmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull()
            {
                this[this.tableVan_Net_Bill_Table.AmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull()
            {
                return this.IsNull(this.tableVan_Net_Bill_Table.TotalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull()
            {
                this[this.tableVan_Net_Bill_Table.TotalColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_DateNull()
            {
                return this.IsNull(this.tableVan_Net_Bill_Table.Bill_DateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_DateNull()
            {
                this[this.tableVan_Net_Bill_Table.Bill_DateColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class School_Net_Bill_TableRow : global::System.Data.DataRow
        {

            private School_Net_Bill_TableDataTable tableSchool_Net_Bill_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal School_Net_Bill_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableSchool_Net_Bill_Table = ((School_Net_Bill_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SBill_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Net_Bill_Table.SBill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SBill_No\' in table \'School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Net_Bill_Table.SBill_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Net_Bill_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Net_Bill_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Net_Bill_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Net_Bill_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Net_Bill_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Net_Bill_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Net_Bill_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Net_Bill_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Net_Bill_Table.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Net_Bill_Table.AmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Net_Bill_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Net_Bill_Table.TotalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Date
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Net_Bill_Table.Bill_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Date\' in table \'School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Net_Bill_Table.Bill_DateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBill_NoNull()
            {
                return this.IsNull(this.tableSchool_Net_Bill_Table.SBill_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBill_NoNull()
            {
                this[this.tableSchool_Net_Bill_Table.SBill_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableSchool_Net_Bill_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableSchool_Net_Bill_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableSchool_Net_Bill_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableSchool_Net_Bill_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableSchool_Net_Bill_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableSchool_Net_Bill_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableSchool_Net_Bill_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableSchool_Net_Bill_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull()
            {
                return this.IsNull(this.tableSchool_Net_Bill_Table.AmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull()
            {
                this[this.tableSchool_Net_Bill_Table.AmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull()
            {
                return this.IsNull(this.tableSchool_Net_Bill_Table.TotalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull()
            {
                this[this.tableSchool_Net_Bill_Table.TotalColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_DateNull()
            {
                return this.IsNull(this.tableSchool_Net_Bill_Table.Bill_DateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_DateNull()
            {
                this[this.tableSchool_Net_Bill_Table.Bill_DateColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Hostel_Net_Bill_TableRow : global::System.Data.DataRow
        {

            private Hostel_Net_Bill_TableDataTable tableHostel_Net_Bill_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Hostel_Net_Bill_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableHostel_Net_Bill_Table = ((Hostel_Net_Bill_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HBill_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Net_Bill_Table.HBill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'HBill_No\' in table \'Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Net_Bill_Table.HBill_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Net_Bill_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Net_Bill_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Net_Bill_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Net_Bill_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Net_Bill_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Net_Bill_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Net_Bill_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Net_Bill_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Net_Bill_Table.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Net_Bill_Table.AmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Net_Bill_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Net_Bill_Table.TotalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Date
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Net_Bill_Table.Bill_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Date\' in table \'Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Net_Bill_Table.Bill_DateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHBill_NoNull()
            {
                return this.IsNull(this.tableHostel_Net_Bill_Table.HBill_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHBill_NoNull()
            {
                this[this.tableHostel_Net_Bill_Table.HBill_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableHostel_Net_Bill_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableHostel_Net_Bill_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableHostel_Net_Bill_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableHostel_Net_Bill_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableHostel_Net_Bill_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableHostel_Net_Bill_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableHostel_Net_Bill_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableHostel_Net_Bill_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull()
            {
                return this.IsNull(this.tableHostel_Net_Bill_Table.AmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull()
            {
                this[this.tableHostel_Net_Bill_Table.AmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull()
            {
                return this.IsNull(this.tableHostel_Net_Bill_Table.TotalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull()
            {
                this[this.tableHostel_Net_Bill_Table.TotalColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_DateNull()
            {
                return this.IsNull(this.tableHostel_Net_Bill_Table.Bill_DateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_DateNull()
            {
                this[this.tableHostel_Net_Bill_Table.Bill_DateColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Stationary_Net_Bill_TableRow : global::System.Data.DataRow
        {

            private Stationary_Net_Bill_TableDataTable tableStationary_Net_Bill_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Stationary_Net_Bill_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableStationary_Net_Bill_Table = ((Stationary_Net_Bill_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SBill_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Net_Bill_Table.SBill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SBill_No\' in table \'Stationary_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Net_Bill_Table.SBill_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Net_Bill_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Stationary_Net_Bill_Table\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Net_Bill_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Net_Bill_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Stationary_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Net_Bill_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Net_Bill_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Stationary_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Net_Bill_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Net_Bill_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Stationary_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Net_Bill_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Net_Bill_Table.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Stationary_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Net_Bill_Table.AmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Net_Bill_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'Stationary_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Net_Bill_Table.TotalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Date
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Net_Bill_Table.Bill_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Date\' in table \'Stationary_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Net_Bill_Table.Bill_DateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBill_NoNull()
            {
                return this.IsNull(this.tableStationary_Net_Bill_Table.SBill_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBill_NoNull()
            {
                this[this.tableStationary_Net_Bill_Table.SBill_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableStationary_Net_Bill_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableStationary_Net_Bill_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableStationary_Net_Bill_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableStationary_Net_Bill_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableStationary_Net_Bill_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableStationary_Net_Bill_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableStationary_Net_Bill_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableStationary_Net_Bill_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull()
            {
                return this.IsNull(this.tableStationary_Net_Bill_Table.AmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull()
            {
                this[this.tableStationary_Net_Bill_Table.AmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull()
            {
                return this.IsNull(this.tableStationary_Net_Bill_Table.TotalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull()
            {
                this[this.tableStationary_Net_Bill_Table.TotalColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_DateNull()
            {
                return this.IsNull(this.tableStationary_Net_Bill_Table.Bill_DateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_DateNull()
            {
                this[this.tableStationary_Net_Bill_Table.Bill_DateColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Other_School_Net_Bill_TableRow : global::System.Data.DataRow
        {

            private Other_School_Net_Bill_TableDataTable tableOther_School_Net_Bill_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Other_School_Net_Bill_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableOther_School_Net_Bill_Table = ((Other_School_Net_Bill_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OSBill_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_School_Net_Bill_Table.OSBill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OSBill_No\' in table \'Other_School_Net_Bill_Table\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableOther_School_Net_Bill_Table.OSBill_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_School_Net_Bill_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Other_School_Net_Bill_Table\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_School_Net_Bill_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_School_Net_Bill_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Other_School_Net_Bill_Table\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableOther_School_Net_Bill_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_School_Net_Bill_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Other_School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_School_Net_Bill_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_School_Net_Bill_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Other_School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_School_Net_Bill_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_School_Net_Bill_Table.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Other_School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_School_Net_Bill_Table.AmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_School_Net_Bill_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'Other_School_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_School_Net_Bill_Table.TotalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Date
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_School_Net_Bill_Table.Bill_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Date\' in table \'Other_School_Net_Bill_Table\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableOther_School_Net_Bill_Table.Bill_DateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOSBill_NoNull()
            {
                return this.IsNull(this.tableOther_School_Net_Bill_Table.OSBill_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOSBill_NoNull()
            {
                this[this.tableOther_School_Net_Bill_Table.OSBill_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableOther_School_Net_Bill_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableOther_School_Net_Bill_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableOther_School_Net_Bill_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableOther_School_Net_Bill_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableOther_School_Net_Bill_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableOther_School_Net_Bill_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableOther_School_Net_Bill_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableOther_School_Net_Bill_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull()
            {
                return this.IsNull(this.tableOther_School_Net_Bill_Table.AmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull()
            {
                this[this.tableOther_School_Net_Bill_Table.AmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull()
            {
                return this.IsNull(this.tableOther_School_Net_Bill_Table.TotalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull()
            {
                this[this.tableOther_School_Net_Bill_Table.TotalColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_DateNull()
            {
                return this.IsNull(this.tableOther_School_Net_Bill_Table.Bill_DateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_DateNull()
            {
                this[this.tableOther_School_Net_Bill_Table.Bill_DateColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Other_Hostel_Net_Bill_TableRow : global::System.Data.DataRow
        {

            private Other_Hostel_Net_Bill_TableDataTable tableOther_Hostel_Net_Bill_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Other_Hostel_Net_Bill_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableOther_Hostel_Net_Bill_Table = ((Other_Hostel_Net_Bill_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OHBill_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_Hostel_Net_Bill_Table.OHBill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'OHBill_No\' in table \'Other_Hostel_Net_Bill_Table\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableOther_Hostel_Net_Bill_Table.OHBill_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_Hostel_Net_Bill_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Other_Hostel_Net_Bill_Table\' is DBN" +
                                "ull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_Hostel_Net_Bill_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_Hostel_Net_Bill_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Other_Hostel_Net_Bill_Table\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableOther_Hostel_Net_Bill_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_Hostel_Net_Bill_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Other_Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_Hostel_Net_Bill_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_Hostel_Net_Bill_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Other_Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_Hostel_Net_Bill_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_Hostel_Net_Bill_Table.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Other_Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_Hostel_Net_Bill_Table.AmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_Hostel_Net_Bill_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'Other_Hostel_Net_Bill_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableOther_Hostel_Net_Bill_Table.TotalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Date
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableOther_Hostel_Net_Bill_Table.Bill_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Date\' in table \'Other_Hostel_Net_Bill_Table\' is DBNull" +
                                ".", e);
                    }
                }
                set
                {
                    this[this.tableOther_Hostel_Net_Bill_Table.Bill_DateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOHBill_NoNull()
            {
                return this.IsNull(this.tableOther_Hostel_Net_Bill_Table.OHBill_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOHBill_NoNull()
            {
                this[this.tableOther_Hostel_Net_Bill_Table.OHBill_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableOther_Hostel_Net_Bill_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableOther_Hostel_Net_Bill_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableOther_Hostel_Net_Bill_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableOther_Hostel_Net_Bill_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableOther_Hostel_Net_Bill_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableOther_Hostel_Net_Bill_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableOther_Hostel_Net_Bill_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableOther_Hostel_Net_Bill_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull()
            {
                return this.IsNull(this.tableOther_Hostel_Net_Bill_Table.AmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull()
            {
                this[this.tableOther_Hostel_Net_Bill_Table.AmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull()
            {
                return this.IsNull(this.tableOther_Hostel_Net_Bill_Table.TotalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull()
            {
                this[this.tableOther_Hostel_Net_Bill_Table.TotalColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_DateNull()
            {
                return this.IsNull(this.tableOther_Hostel_Net_Bill_Table.Bill_DateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_DateNull()
            {
                this[this.tableOther_Hostel_Net_Bill_Table.Bill_DateColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class School_Fees_Not_Paid_TableRow : global::System.Data.DataRow
        {

            private School_Fees_Not_Paid_TableDataTable tableSchool_Fees_Not_Paid_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal School_Fees_Not_Paid_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableSchool_Fees_Not_Paid_Table = ((School_Fees_Not_Paid_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Fees_Not_Paid_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'School_Fees_Not_Paid_Table\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Fees_Not_Paid_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Fees_Not_Paid_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'School_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Fees_Not_Paid_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Fees_Not_Paid_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'School_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Fees_Not_Paid_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableSchool_Fees_Not_Paid_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'School_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableSchool_Fees_Not_Paid_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableSchool_Fees_Not_Paid_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableSchool_Fees_Not_Paid_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableSchool_Fees_Not_Paid_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableSchool_Fees_Not_Paid_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableSchool_Fees_Not_Paid_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableSchool_Fees_Not_Paid_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableSchool_Fees_Not_Paid_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableSchool_Fees_Not_Paid_Table.SectionColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Van_Fees_Not_Paid_TableRow : global::System.Data.DataRow
        {

            private Van_Fees_Not_Paid_TableDataTable tableVan_Fees_Not_Paid_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Van_Fees_Not_Paid_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableVan_Fees_Not_Paid_Table = ((Van_Fees_Not_Paid_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Fees_Not_Paid_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Van_Fees_Not_Paid_Table\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableVan_Fees_Not_Paid_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Fees_Not_Paid_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Van_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Fees_Not_Paid_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Fees_Not_Paid_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Van_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Fees_Not_Paid_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Fees_Not_Paid_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Van_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Fees_Not_Paid_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SMonth
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableVan_Fees_Not_Paid_Table.SMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMonth\' in table \'Van_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableVan_Fees_Not_Paid_Table.SMonthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableVan_Fees_Not_Paid_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableVan_Fees_Not_Paid_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableVan_Fees_Not_Paid_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableVan_Fees_Not_Paid_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableVan_Fees_Not_Paid_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableVan_Fees_Not_Paid_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableVan_Fees_Not_Paid_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableVan_Fees_Not_Paid_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMonthNull()
            {
                return this.IsNull(this.tableVan_Fees_Not_Paid_Table.SMonthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMonthNull()
            {
                this[this.tableVan_Fees_Not_Paid_Table.SMonthColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Hostel_Fees_Not_Paid_TableRow : global::System.Data.DataRow
        {

            private Hostel_Fees_Not_Paid_TableDataTable tableHostel_Fees_Not_Paid_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Hostel_Fees_Not_Paid_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableHostel_Fees_Not_Paid_Table = ((Hostel_Fees_Not_Paid_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Fees_Not_Paid_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Hostel_Fees_Not_Paid_Table\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Fees_Not_Paid_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Fees_Not_Paid_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Hostel_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Fees_Not_Paid_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Fees_Not_Paid_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Hostel_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Fees_Not_Paid_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Fees_Not_Paid_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Hostel_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Fees_Not_Paid_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SMonth
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableHostel_Fees_Not_Paid_Table.SMonthColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMonth\' in table \'Hostel_Fees_Not_Paid_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableHostel_Fees_Not_Paid_Table.SMonthColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableHostel_Fees_Not_Paid_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableHostel_Fees_Not_Paid_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableHostel_Fees_Not_Paid_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableHostel_Fees_Not_Paid_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableHostel_Fees_Not_Paid_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableHostel_Fees_Not_Paid_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableHostel_Fees_Not_Paid_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableHostel_Fees_Not_Paid_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMonthNull()
            {
                return this.IsNull(this.tableHostel_Fees_Not_Paid_Table.SMonthColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMonthNull()
            {
                this[this.tableHostel_Fees_Not_Paid_Table.SMonthColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Daily_Net_Bill_Amunt_TableRow : global::System.Data.DataRow
        {

            private Daily_Net_Bill_Amunt_TableDataTable tableDaily_Net_Bill_Amunt_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Daily_Net_Bill_Amunt_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableDaily_Net_Bill_Amunt_Table = ((Daily_Net_Bill_Amunt_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.Bill_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_No\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.Bill_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.DescriptionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Amount
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.AmountColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Total
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.TotalColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Bill_Date
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableDaily_Net_Bill_Amunt_Table.Bill_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bill_Date\' in table \'Daily_Net_Bill_Amunt_Table\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableDaily_Net_Bill_Amunt_Table.Bill_DateColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_NoNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.Bill_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_NoNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.Bill_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.DescriptionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.DescriptionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAmountNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.AmountColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAmountNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.AmountColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotalNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.TotalColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotalNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.TotalColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBill_DateNull()
            {
                return this.IsNull(this.tableDaily_Net_Bill_Amunt_Table.Bill_DateColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBill_DateNull()
            {
                this[this.tableDaily_Net_Bill_Amunt_Table.Bill_DateColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Stationary_Paid_Net_Bill_TableRow : global::System.Data.DataRow
        {

            private Stationary_Paid_Net_Bill_TableDataTable tableStationary_Paid_Net_Bill_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Stationary_Paid_Net_Bill_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableStationary_Paid_Net_Bill_Table = ((Stationary_Paid_Net_Bill_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Paid_Net_Bill_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Stationary_Paid_Net_Bill_Table\' is " +
                                "DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Paid_Net_Bill_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Paid_Net_Bill_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Stationary_Paid_Net_Bill_Table\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Paid_Net_Bill_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Paid_Net_Bill_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Stationary_Paid_Net_Bill_Table\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Paid_Net_Bill_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Paid_Net_Bill_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Stationary_Paid_Net_Bill_Table\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Paid_Net_Bill_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableStationary_Paid_Net_Bill_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableStationary_Paid_Net_Bill_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableStationary_Paid_Net_Bill_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableStationary_Paid_Net_Bill_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableStationary_Paid_Net_Bill_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableStationary_Paid_Net_Bill_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableStationary_Paid_Net_Bill_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableStationary_Paid_Net_Bill_Table.SectionColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Stationary_Fees_Not_Paid_TableRow : global::System.Data.DataRow
        {

            private Stationary_Fees_Not_Paid_TableDataTable tableStationary_Fees_Not_Paid_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Stationary_Fees_Not_Paid_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableStationary_Fees_Not_Paid_Table = ((Stationary_Fees_Not_Paid_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Fees_Not_Paid_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Stationary_Fees_Not_Paid_Table\' is " +
                                "DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Fees_Not_Paid_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Fees_Not_Paid_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Stationary_Fees_Not_Paid_Table\' is DBNu" +
                                "ll.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Fees_Not_Paid_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Fees_Not_Paid_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Stationary_Fees_Not_Paid_Table\' is DBNull." +
                                "", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Fees_Not_Paid_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableStationary_Fees_Not_Paid_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Stationary_Fees_Not_Paid_Table\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableStationary_Fees_Not_Paid_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableStationary_Fees_Not_Paid_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableStationary_Fees_Not_Paid_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableStationary_Fees_Not_Paid_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableStationary_Fees_Not_Paid_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableStationary_Fees_Not_Paid_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableStationary_Fees_Not_Paid_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableStationary_Fees_Not_Paid_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableStationary_Fees_Not_Paid_Table.SectionColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Arrear_Student_TableRow : global::System.Data.DataRow
        {

            private Arrear_Student_TableDataTable tableArrear_Student_Table;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Arrear_Student_TableRow(global::System.Data.DataRowBuilder rb) :
                base(rb)
            {
                this.tableArrear_Student_Table = ((Arrear_Student_TableDataTable)(this.Table));
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SYear
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.SYearColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SYear\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.SYearColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EYear
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.EYearColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'EYear\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.EYearColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Class
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.ClassColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Class\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.ClassColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Section
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.SectionColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Section\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.SectionColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Std_Name
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.Std_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Std_Name\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.Std_NameColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Admission_No
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.Admission_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Admission_No\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.Admission_NoColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Accomm_Type
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.Accomm_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Accomm_Type\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.Accomm_TypeColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Van
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.VanColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'Van\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.VanColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SchoolBillPay
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.SchoolBillPayColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'SchoolBillPay\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.SchoolBillPayColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string HostelBillPay
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.HostelBillPayColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'HostelBillPay\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.HostelBillPayColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VanBillPay
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.VanBillPayColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'VanBillPay\' in table \'Arrear_Student_Table\' is DBNull.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.VanBillPayColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StationaryBillPay
            {
                get
                {
                    try
                    {
                        return ((string)(this[this.tableArrear_Student_Table.StationaryBillPayColumn]));
                    }
                    catch (global::System.InvalidCastException e)
                    {
                        throw new global::System.Data.StrongTypingException("The value for column \'StationaryBillPay\' in table \'Arrear_Student_Table\' is DBNul" +
                                "l.", e);
                    }
                }
                set
                {
                    this[this.tableArrear_Student_Table.StationaryBillPayColumn] = value;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYearNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.SYearColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYearNull()
            {
                this[this.tableArrear_Student_Table.SYearColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEYearNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.EYearColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEYearNull()
            {
                this[this.tableArrear_Student_Table.EYearColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClassNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.ClassColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClassNull()
            {
                this[this.tableArrear_Student_Table.ClassColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSectionNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.SectionColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSectionNull()
            {
                this[this.tableArrear_Student_Table.SectionColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStd_NameNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.Std_NameColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStd_NameNull()
            {
                this[this.tableArrear_Student_Table.Std_NameColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAdmission_NoNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.Admission_NoColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAdmission_NoNull()
            {
                this[this.tableArrear_Student_Table.Admission_NoColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccomm_TypeNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.Accomm_TypeColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccomm_TypeNull()
            {
                this[this.tableArrear_Student_Table.Accomm_TypeColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVanNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.VanColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVanNull()
            {
                this[this.tableArrear_Student_Table.VanColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSchoolBillPayNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.SchoolBillPayColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSchoolBillPayNull()
            {
                this[this.tableArrear_Student_Table.SchoolBillPayColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHostelBillPayNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.HostelBillPayColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHostelBillPayNull()
            {
                this[this.tableArrear_Student_Table.HostelBillPayColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVanBillPayNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.VanBillPayColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVanBillPayNull()
            {
                this[this.tableArrear_Student_Table.VanBillPayColumn] = global::System.Convert.DBNull;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStationaryBillPayNull()
            {
                return this.IsNull(this.tableArrear_Student_Table.StationaryBillPayColumn);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStationaryBillPayNull()
            {
                this[this.tableArrear_Student_Table.StationaryBillPayColumn] = global::System.Convert.DBNull;
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Daily_Net_Bill_TableRowChangeEvent : global::System.EventArgs
        {

            private Daily_Net_Bill_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_TableRowChangeEvent(Daily_Net_Bill_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Van_Net_Bill_TableRowChangeEvent : global::System.EventArgs
        {

            private Van_Net_Bill_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Net_Bill_TableRowChangeEvent(Van_Net_Bill_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Net_Bill_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class School_Net_Bill_TableRowChangeEvent : global::System.EventArgs
        {

            private School_Net_Bill_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Net_Bill_TableRowChangeEvent(School_Net_Bill_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Net_Bill_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Hostel_Net_Bill_TableRowChangeEvent : global::System.EventArgs
        {

            private Hostel_Net_Bill_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Net_Bill_TableRowChangeEvent(Hostel_Net_Bill_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Net_Bill_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Stationary_Net_Bill_TableRowChangeEvent : global::System.EventArgs
        {

            private Stationary_Net_Bill_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Net_Bill_TableRowChangeEvent(Stationary_Net_Bill_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Net_Bill_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Other_School_Net_Bill_TableRowChangeEvent : global::System.EventArgs
        {

            private Other_School_Net_Bill_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_School_Net_Bill_TableRowChangeEvent(Other_School_Net_Bill_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_School_Net_Bill_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Other_Hostel_Net_Bill_TableRowChangeEvent : global::System.EventArgs
        {

            private Other_Hostel_Net_Bill_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_Hostel_Net_Bill_TableRowChangeEvent(Other_Hostel_Net_Bill_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Other_Hostel_Net_Bill_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class School_Fees_Not_Paid_TableRowChangeEvent : global::System.EventArgs
        {

            private School_Fees_Not_Paid_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Fees_Not_Paid_TableRowChangeEvent(School_Fees_Not_Paid_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public School_Fees_Not_Paid_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Van_Fees_Not_Paid_TableRowChangeEvent : global::System.EventArgs
        {

            private Van_Fees_Not_Paid_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Fees_Not_Paid_TableRowChangeEvent(Van_Fees_Not_Paid_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Van_Fees_Not_Paid_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Hostel_Fees_Not_Paid_TableRowChangeEvent : global::System.EventArgs
        {

            private Hostel_Fees_Not_Paid_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Fees_Not_Paid_TableRowChangeEvent(Hostel_Fees_Not_Paid_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Hostel_Fees_Not_Paid_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Daily_Net_Bill_Amunt_TableRowChangeEvent : global::System.EventArgs
        {

            private Daily_Net_Bill_Amunt_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_Amunt_TableRowChangeEvent(Daily_Net_Bill_Amunt_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Daily_Net_Bill_Amunt_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Stationary_Paid_Net_Bill_TableRowChangeEvent : global::System.EventArgs
        {

            private Stationary_Paid_Net_Bill_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Paid_Net_Bill_TableRowChangeEvent(Stationary_Paid_Net_Bill_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Paid_Net_Bill_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Stationary_Fees_Not_Paid_TableRowChangeEvent : global::System.EventArgs
        {

            private Stationary_Fees_Not_Paid_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Fees_Not_Paid_TableRowChangeEvent(Stationary_Fees_Not_Paid_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Stationary_Fees_Not_Paid_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }

        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Arrear_Student_TableRowChangeEvent : global::System.EventArgs
        {

            private Arrear_Student_TableRow eventRow;

            private global::System.Data.DataRowAction eventAction;

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Arrear_Student_TableRowChangeEvent(Arrear_Student_TableRow row, global::System.Data.DataRowAction action)
            {
                this.eventRow = row;
                this.eventAction = action;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Arrear_Student_TableRow Row
            {
                get
                {
                    return this.eventRow;
                }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action
            {
                get
                {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591